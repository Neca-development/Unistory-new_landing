import { ICase } from "@shared/lib/types";
import fairyBanner from "@public/assets/images/cases/fairy-tale-ai/banner.jpg";
import fairyPlatform from "@public/assets/images/cases/fairy-tale-ai/platform.jpg";
import fairyLibrary from "@public/assets/images/cases/fairy-tale-ai/library.jpg";
import fairyDevelopment from "@public/assets/images/cases/fairy-tale-ai/development.jpg";
import fairyGeneration from "@public/assets/images/cases/fairy-tale-ai/generation.jpg";
import fairyTextToSpeech from "@public/assets/images/cases/fairy-tale-ai/text-to-speech.jpg";
import fairyBannerThumb from "@public/assets/images/cases/fairy-tale-ai/thumb.jpg";
import fairyBannerThumbMob from "@public/assets/images/cases/fairy-tale-ai/thumb_mob.jpg";
import { TECHNOLOGIES } from "../technologies.constats";
import { TEAM } from "../team";

export const FAIRY_TALE_AI: ICase = {
  title: {
    en: "Fairy Tale AI Generation",
    ru: "AI-генератор сказок",
  },
  id: "fairy-tale-ai",
  heroTitle: {
    en: "Prompt engineering and development for a fairy tale generation service",
    ru: "Промпт-инжиниринг и разработка для сервиса генерации сказок",
  },
  categories: {
    en: ["Assistant in composing tales for children"],
    ru: ["Помогаем родителям сочинять сказки для детей"],
  },
  metaTitle: {
    en: "Fairy tale generator: AI integration and prompt engineering",
    ru: "Сервис генерации сказок: интеграция AI и промпт-инжиниринг",
  },
  metaDescription: {
    en: "Coordination of the work of ChatGPT, DALL·E 3, and the Google Cloud Text-to-Speech API. Development of the backend component and meticulous crafting of the query system for the neural network, enabling the generation of long captivating stories with illustrations.",
    ru: "Скоординировали работу ChatGPT, DALL·E 3 и Google Cloud Text-to-Speech API. Разработали бэкенд-составляющую и детально проработали систему запросов в нейросети, чтобы генерировать длинные захватывающие истории с иллюстрациями. ",
  },
  showCategoriesOnPage: false,
  icons: ["monitor", "phone02"],
  textColor: "white",
  technologies: [
    TECHNOLOGIES.nest,
    TECHNOLOGIES.typescript,
    TECHNOLOGIES.openai,
    TECHNOLOGIES.stripe,
  ],
  thumbnail: {
    desktop: fairyBannerThumb.src,
    mob: fairyBannerThumbMob.src,
  },
  heroBanner: {
    desktop: fairyBanner.src,
    mob: fairyBanner.src,
  },
  description: {
    en: "The client from Romania approached us with the idea of ​​creating a service for generating children's fairy tales. Text, illustrations, and audio readings of the tale, all of this can be generated using artificial intelligence. The main thing is to properly coordinate the work of several neural networks, synchronize them in order to obtain a complete illustrated text. We carried out mutual integration of the models and fully developed the backend of the new platform. To make reading this case more interesting for you, we added illustrations to the page. The basis of these illustrations is visual and textual quotes from the fairy tale generated by the service.",
    ru: "Заказчик из Румынии пришел к нам с идеей создать сервис генерации детских сказок. Текст, иллюстрации, аудио-прочтение сказки — все это можно генерировать через искусственный интеллект. Главное — правильно скоординировать работу нескольких нейросетей, «подружить» их между собой, чтобы получить целостный иллюстрированный текст. Мы провели взаимную интеграцию моделей и полностью разработали бэкенд новой платформы. Чтобы вам было интереснее читать этот кейс, мы добавили на страницу иллюстрации. В основе иллюстраций — визуальные и текстовые цитаты из сказки, которую сгенерировал сервис. ",
  },
  params: {
    budget: {
      ru: 0,
      en: 0,
    },
    period: 3,
    year: "2024",
  },
  main: [
    {
      title: {
        en: "How does the platform work",
        ru: "Как работает платформа",
      },
      text: [
        {
          text: {
            en: "The user logs into the platform, registers, selects a tariff plan, and makes payment. After registration and payment, the user can create a fairy tale by specifying several parameters:",
            ru: "Пользователь заходит на платформу, регистрируется, выбирает тарифный план и оплачивает его. Далее он может создать сказку, указав несколько параметров:",
          },
        },
        {
          text: {
            en: "<ul><li>Title. The user chooses the title, which influences the final text.</li><li>Location. Options include a magical forest, a princess's castle, an enchanted kingdom, or a modern city.</li><li>Genre. Adventure, comedy, fantasy, or stories tailored for the youngest audience.</li><li>Characters. In this service, the main characters of the tale can be the user's child and their favorite pet, for example, a hamster.</li><li>Number of Chapters. Each chapter in the tale consists of approximately 5000 characters. Subscribers to the service can access up to 10 chapters in one tale. Handling a large volume of text was the main challenge, which we addressed at the prompt engineering level.</li></ul>",
            ru: "<ul><li>Название. Пользователь указывает его сам, и название оказывает влияние на итоговый текст.</li><li>Локация — волшебный лес, замок принцессы, заколдованное королевство, обычный современный город.</li><li>Жанр — приключения, комедия, фантастика, для самых маленьких.</li><li>Персонажи. В этом сервисе героями сказки могут стать ваш ребенок и его любимый хомячок.</li><li>Количество глав. Одна глава в сказке — это около 5000 символов. Для обладателей подписки на сервис будет доступно до 10 глав в одной сказке. Большой объем текста стал основным челленджем, который мы решили на уровне промпт-инжиринга.</li></ul>",
          },
        },
      ],
      banner: fairyPlatform.src,
    },
    {
      title: {
        en: "Library and Sharing",
        ru: "Библиотека и шеринг",
      },
      text: [
        {
          text: {
            en: 'The stories created by the user will be saved in the "Library" section. Here you can:',
            ru: "Истории, которые создает пользователь, будут сохраняться в разделе «Библиотека». Здесь вы можете:",
          },
        },
        {
          text: {
            en: "<ul><li>Read fairy tales without leaving the platform.</li><li>Convert the generated material into audiobook format and listen to them.</li><li>Download the illustrated fairy tale in PDF format.</li><li>Share your stories on social networks.</li></ul>",
            ru: "<ul><li>Читать сказки, не покидая платформы</li><li>Переводить сгенерированный материал в формат аудиокниги и слушать их</li><li>Выгружать иллюстрированную сказку в виде pdf</li><li>Делиться своими историями в в соцсетях</li></ul>",
          },
        },
        {
          text: {
            en: "We understand that the results of neural networks' work may still require minor corrections. Thus, platform subscribers can always edit the text of the tale or regenerate a chapter.",
            ru: "Подписчик платформы всегда может отредактировать текст сказки или перегенерировать главу. Мы понимаем, что результаты работы нейросетей до сих пор могут требовать небольшой корректуры.",
          },
        },
      ],
      banner: fairyLibrary.src,
    },
    {
      title: {
        en: "Development and Prompt Engineering",
        ru: "Разработка и промпт-инжиринг",
      },
      text: [
        {
          text: {
            en: "Text generation in our project is handled by GPT-4 Turbo, while we utilize DALL·E 3 for creating illustrations. To generate tales consisting of 10 chapters, each with 5000 characters, we make multiple requests to GPT for each chapter. This was necessary because this language model has a limitation of up to 4000 characters per message.",
            ru: "За генерацию текста в нашем проекта отвечает GPT4 Turbo, для создания иллюстраций используем DALL·E 3. Чтобы генерировать сказки из 10 глав, в каждой из которых 5000 символов, мы делаем для каждой главы несколько запросов в GPT. Это было необходимым шагом, так как данная LLM имеет ограничение — до 4000 символов на одно сообщение.",
          },
        },
        {
          text: {
            en: "Before generating individual chapters, we request a basic description of the tale and its plot, main characters, and key events. Then, we request a brief description for each chapter separately.",
            ru: "Перед генерацией отдельных глав мы запрашиваем базовое описание сказки и ее сюжета, главных героев и ключевых событий. После этого запрашиваем отдельное краткое описание для каждой главы. ",
          },
        },
        {
          text: {
            en: "Only after these steps do we ask GPT to create individual chapters for us. Here, we further divide the process to increase the generation speed: we sequentially request each paragraph of the chapter. The neural network creates paragraphs and chapters step by step, considering the full text that was generated earlier. Additionally, GPT takes into account the overall description of the tale and the separate descriptions of all chapters, including those not yet generated.",
            ru: "Только после этого мы просим GPT создать для нас отдельные главы. Здесь разделяем процесс еще сильнее, чтобы увеличить скорость генерации: по очереди запрашиваем каждый параграф главы. Нейросеть создает абзацы и главы поэтапно, с учетом полного текста, который был сгенерирован ранее. Также GPT учитывает общее описание сказки и отдельные описания всех глав, в том числе — еще не сгенерированных. ",
          },
        },
      ],
      banner: fairyDevelopment.src,
    },
    {
      title: {
        en: "Image Generation",
        ru: "Генерация изображений",
      },
      text: [
        {
          text: {
            en: "To generate relevant images, we coordinate requests to GPT and DALL·E through the backend. Each chapter contains one illustration, and it should correspond to the text of the tale, maintaining coherence with the overall narrative. Requests to DALL·E also take into account all our variables: user-defined parameters, the overall description of the tale, descriptions of individual chapters, and texts and images of already generated chapters. The user has the option to regenerate any image if they are unsatisfied with the result.",
            ru: "Чтобы сгенерировать релевантные изображения, мы координируем запросы в GPT и DALL·E через бэкенд. В каждой главе есть одна иллюстрация, и она должна соответствовать тексту сказки, не выпадать из общего нарратива. Запросы в DALL·E также учитывают все наши переменные: заданные пользователем параметры, общее описание сказки, описания отдельных глав, тексты и картинки уже сгенерированных глав. Пользователь имеет возможность перегенерировать любую картинку, если остался недоволен результатом. ",
          },
        },
      ],
      banner: fairyGeneration.src,
    },
    {
      title: {
        en: "Text-to-Speech",
        ru: "Text-to-Speech",
      },
      text: [
        {
          text: {
            en: "Once the illustrated tale is fully prepared, it can be converted into an audiobook without leaving the platform. To implement this feature, we integrated with Google's Cloud Text-to-Speech API. We then subscribed to this service, allowing us to provide users with the option to switch between different voices. Female, male, sweet, stern, low, high, choose which narrator your children will prefer.",
            ru: "После того, как иллюстрированная сказка полностью готова, ее можно превратить в аудиокнигу, не покидая платформу. Для реализации этой возможности мы провели интеграцию с инструментом Google — Cloud Text-to-Speech API. Затем оплатили подписку на этот сервис, благодаря чему смогли предоставить пользователям возможность переключаться между разными голосами. Женский, мужской, милый, строгий, низкий, высокий — выбирайте, какой чтец больше понравится вашим детям.",
          },
        },
      ],
      banner: fairyTextToSpeech.src,
    },
    {
      title: {
        en: "Monetization",
        ru: "Монетизация",
      },
      text: [
        {
          text: {
            en: "The monetization scheme of this web service involves a subscription model, with payments processed through Stripe. Users will have access to several subscription options: monthly, semi-annual, and annual plans. Depending on the chosen plan, users will be able to generate a different number of tales. Creating an audiobook based on the generated tale will be offered as a separate paid option.",
            ru: "Схема монетизации этого веб-сервиса — подписка, сервис оплаты — Stripe. Пользователям будет доступно несколько видов подписки: на месяц, на полгода, на год. В зависимости от тарифного плана пользователи смогут генерировать разное количество сказок. Создание аудиокниги на основе сгенерированной сказки будет оформлено как отдельная платная опция. ",
          },
        },
        {
          text: {
            en: "Monetization and subscription were necessary because the AI tools used to create text, images, and audio are paid services. We discussed with the client the possibility of using more affordable tools but decided not to compromise on quality for the sake of free access.",
            ru: "Монетизация и платная подписка была необходима, так как AI-инструменты, создающие текст, картинку и аудио, являются платными. Мы обсуждали с клиентом возможность использования более доступных инструментов, но решили, что не будем жертвовать качеством ради бесплатного доступа. ",
          },
        },
        {
          text: {
            en: "Immediately after launch, the platform will be available in English. Later on, the client plans to add two additional languages: Spanish and Romanian.",
            ru: "Сразу после запуска платформа будет доступна на английском языке, позже клиент планирует подключить два дополнительных языка, испанский и румынский.",
          },
        },
      ],
    },
  ],
  team: [TEAM.zaharDoroshenko, TEAM.yanBortsov, TEAM.maximIvanov],
};
