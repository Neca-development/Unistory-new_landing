doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="icon", href="../favicon.ico")
    link(rel="apple-touch-icon", href="../apple-touch-icon.png")
    title Unistory | GasMonsters
    link(rel="stylesheet", href="../styles/main.scss")
    link(
      rel="stylesheet",
      href="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.css"
    )
  body
    include ./blocks/header.pug
    .personal
      section.container.projectPromoPrimary
        .projectPromoPrimary__info
          .info__left
            h2 GasMonsters
            h1 NFT & Gamification
            .left__tags.primary
              a(href="javascript:;", data-tag) #NFT
              a(href="javascript:;", data-tag) #WEB 3.0
              a(href="javascript:;", data-tag) #Chainlink
          .info__right
            .right__time
              h4(data-i18n="project.time") Time
              p(data-i18n="gasmonsters.time") 6 months
            .right__scope
              h4(data-i18n="project.scope") Scope
              ul 
                li Product analysis
                li Backend
                li Frontend
                li Blockchain
        .projectPromoPrimary__image.gas
        .projectPromoPrimary__about
          h3(data-i18n="project.about") About
          p(data-i18n="gasmonsters.about") 
            | The main goal of the project is to develop a website for NFT collection where users can purchase an NFT and then upgrade it by using gas.
    section.container.projectDid
      h3(data-i18n="project.what_we_did") What we did
      .projectDid__item.personal
        .item__info
          .info__left 
            h4 01
          .info__right
            h4(data-i18n="gasmonsters.01_title") Upgradable NFT"s
            p(data-i18n="gasmonsters.01_text") NFT holders have the opportunity to upgrade their NFT dragons from 1st to 7th level. It is a part of gamification and this is really clear and user-friendly mechanic. The NFT upgrade functionality is based on connection with transactions on the mainnet and gas spending: the more transactions you make â€“ than more exp LVL for your NFT you get.
        .item__image.gasDid1
      .projectDid__item
        .item__info
          .info__left 
            h4 02
          .info__right
            h4(data-i18n="gasmonsters.02_title") Randomly generated tokens
            p(data-i18n="gasmonsters.02_text") We used a Chainlink VRF blockchain service to determine NFT layers, which gives out randomized parameters inside the blockchain. Layer data is stored in smart contract as mapping. As a result, this numeric combination - serves as an ID file in the IPFS folder, so no one can manage layers, everything is safe.
        .item__image.gasDid2
    section.projectSolutions.gas
      .container.gas
        .projectSolutions__left.gas
          h3(data-i18n="project.technical_solution") Technical solution
        .projectSolutions__right.gas
          h4(data-i18n="project.challenge") Challenge
          p(data-i18n="gasmonsters.challenge") For the NFT upgrade, the smart contract needed to get information about the user's spent gas
          h4(data-i18n="project.solution") Solution
          p(data-i18n="gasmonsters.solution") We solved this problem using Pancakeswap. During the smart contract sale, the nft accesses Pancakeswap and asks for liquidity for the BUSD-BNB pair and calculates how much the BNB is worth in dollars. Then, it goes back to Pancakeswap and asks for liquidity for the BNB-ProjectToken pair and calculates how much the project token is worth in BNB.
        .projectSolutions__bottom.increasingImage
          a(href="../img/gas-monsters/solutions.png", data-fancybox="gallery")
            img(src="../img/gas-monsters/solutions.png", alt="solutions")
    section.container
      .projectTeamStack.gas
        h3(data-i18n="project.team_stack") Team & Stack
        .projectTeamStack__content
          .content__team 
            img.icon(src="../icons/team.svg", alt="team icon")
            ul
              li
                img(src="../img/emoji/glasses.png", alt="Project manager") 
                span(data-i18n="team.project_manager") Project manager
              li
                img(src="../img/emoji/strong.png", alt="Blockchain developer") 
                span(data-i18n="team.blockchain_developer") Blockchain developer(x2)
                span (x2)
              li
                img(
                  src="../img/emoji/brain-destroy.png",
                  alt="Frontend developer"
                ) 
                span(data-i18n="team.frontend") Frontend developer(x2)
                span (x2)
              li
                img(src="../img/emoji/ninja.png", alt="Backend developer") 
                span(data-i18n="team.backend") Backend developer
              li
                img(src="../img/emoji/qa.png", alt="DevOps engineer") 
                span(data-i18n="team.qa_engineer") QA engineer
              li
                img(src="../img/emoji/analyst.png", alt="analyst") 
                span(data-i18n="team.business_analyst") Business analyst
          .content__stack.gas
            img.icon(src="../icons/stack.svg", alt="stack icon")
            img.stack__item(src="../img/stack/next-react.png", alt="next")
            img.stack__item(src="../img/stack/node.png", alt="node")
            img.stack__item(src="../img/stack/solidity.png", alt="solidity")
            img.stack__item(
              src="../img/stack/chain-link-vrf.png",
              alt="chain link vrf"
            )
            img.stack__item(
              src="../img/stack/chain-link.png",
              alt="chain link"
            )
  include ./blocks/contact-projects.pug
  include ./blocks/other-projects.pug
  include ./blocks/footer.pug

  include ./blocks/translation-script.pug
  script(type="module", src="../scripts/categories.js") 
  script(type="module", src="../scripts/project-page-sliders.js")
  script(type="module", src="../scripts/send-mail.js")
  script(type="module", src="../scripts/menu.js")
  script(
    src="https://cdn.jsdelivr.net/npm/@fancyapps/ui@4.0/dist/fancybox.umd.js"
  )
